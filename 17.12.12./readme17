проверка раздела функции стр. 33-34

; SLIME 2011-08-26
CL-USER> (defun sum-greater (x y z)
           (> (+ x y) z))
SUM-GREATER
CL-USER> (sum-greater 5 6 9)
T
CL-USER> (sum-greater 2 3 9)
NIL

все ок, понятно


Рекурсия

проверяем предикат eql

объявляем функцию:
(defun our-member (obj lst)
проверяем пуст или не пуст список
(if (null lst)
nil
проверяем есть ли объект obj в списке lst
car - возвращает головную часть списка lst
пример:
CL-USER> (car '(a b c d))
A


(if (eql (car lst) obj)
lst
выполняемый код, то, что нужно вернуть после вызова функции our-member
cdr - возвращает хвостовую часть списка lst
пример:
CL-USER> (cdr '(a b c d))
(B C D)



(our-member obj (cdr lst)))))

тестируем:

CL-USER> (defun our-member (obj lst)
           (if (null lst)
               nil
               (if (eql (car lst) obj)
                   lst
                   (our-member obj (cdr lst)))))
OUR-MEMBER
CL-USER> (our-member ’b ’(a b c))
; Evaluation aborted on #<UNBOUND-VARIABLE ’B {B841751}>.
CL-USER> (our-member 'b '(a b c))
(B C)
CL-USER> (our-member 'z '(a b c))
NIL
CL-USER> (our-member 'a '(a b c))
(A B C)
CL-USER> (our-member 'c '(a b c))
(C)
CL-USER> (our-member 'x '(a b c))
NIL
CL-USER> (our-member 'ab '(a b c))
NIL
CL-USER> (our-member 'baba '(a b c))
NIL



*****************************************************



