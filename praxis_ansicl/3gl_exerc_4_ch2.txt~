3 glava
__________
EXERC 4.
__________

Почему функция:

(member ’(a) ’((a) (b)))

возвращает nil


CL-USER> (member '(a) '((a) (b)))
NIL 

данная функция проверяет, находится ли первый агумент внутри списка, представленного вторым аргументом
если элемента в списке нет - функция возвращает NIL

причем:
первый аргумент - это s-выражение
второй - обязательно список

Ответ:

т.к. элемент находится не на том уровне:

CL-USER> '(a)
(A)                                                                                                                                   
CL-USER> '((a))
((A)) 

по умолчанию функция сравнивает, через eql
но так же предикат сравнения можно задаать вручную: по ключу

Аргументы по ключу для member:
- :test

> (member ’(a) ’((a) (z)) :test #’equal)
((A) (Z))

позволяет использовать не eql, а equal

- :key

> (member ’a ’((a b) (c d)) :key #’car)
((A B) (C D))

с его помощью можно задать функцию, применяемую к каждому элементу перед сравнением

разница между двумя вызовами:
вызов без аргументов по ключу:
CL-USER> (member '(a) '((a) (z)))
NIL                           
вызов с аргументами по ключу:                                                                                                        
CL-USER> (member '(a) '((a) (z)) :test #'equal)
((A) (Z)) 

пример из упражнения 4
CL-USER> (member '(a) '((a) (b)))
NIL                                                                                                                                    
CL-USER> (member '(a) '((a) (b)) :test #'equal)
((A) (B))
