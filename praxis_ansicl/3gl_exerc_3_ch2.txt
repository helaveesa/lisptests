3 glava

________
EXERC 3.
________

Написать определение функции, которая 
будет определять количество повторений
(с точки зрения eql)
каждого элемента в заданном списке

и сортирующее их по убыванию встречаемости

вызов данной функции:

(occurrences ’(a b a d a c d c a))
((A . 4) (C . 2) (D . 2) (B . 1))


функция eql 
возвращает - Т -только если сравниваемые значения соответствуют одному объекту в памяти Лиспа

> (setf x (cons ’a nil))   ;присвоим переменной x -значение, созданного с помощью cons, списка
(A)			; списко (А)
> (eql x x)		; сравниваем x и x
T			; по мнению функции eql - они равны (т.к. соответствуют одному объекту памяти в лиспе)


или

> (setf x ’(a b c))
(A B C)
> (setf y x)
(A B C)
> (eql x y)
T


подсчитать кол-во повторений может функция compress
данная функция принимает список из атомов
и возвращает его сжатое представление


для сортировки по убыванию встречаемостей - можно воспользоваться
функцией

sort

> (sort ’(0 2 1 3 8) #’>)
(8 3 2 1 0)


ОНА ДЕСТРУКТИВНА! т.е. не создает новый список, а модифицирует исходный

поэтому лучше передавать в функцию sort копию исходника

при вызове функции, которая задана в данном упражнении - показаны cons-ячейки

occurrences - вхождение;

функция суммирования элементов в заданно списке:

CL-USER> (defun sumlist (x)                                                                                                           
           (cond ((null x) 0)                                                                                                         
                 (t                                                                                                                   
                  (+ (car x) (sumlist (cdr x))))))
SUMLIST                                                                                                                               
CL-USER> (sumlist '(1 2 3 4 76 54 34 9 7 ))
190 














